name: Build/release

on: push

jobs:
  release:
      runs-on: ${{ matrix.os }}
      # runs-on: [self-hosted]

      strategy:
        matrix:
          os: [macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install Go mods
        run: go mod download

      - name: Build linux cli binary file
        if: ${{ startsWith(matrix.os, 'ubuntu')}}
        run: go build -a -ldflags "-linkmode external -extldflags \"-static -lm\" " -o release/linux-keyvault-cli ./cli

      - name: Setup windows libs
        if: ${{ startsWith(matrix.os, 'macos')}}
        run: brew install mingw-w64

      - name: Build windows cli binary file
        if: ${{ startsWith(matrix.os, 'macos')}}
        run: CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc go build -buildmode=c-shared -o release/keyvault-cli.exe ./cli

      - name: Build macos cli binary file
        if: ${{ startsWith(matrix.os, 'macos')}}
        run: go build -o release/mac-keyvault-cli ./cli

      - name: Release assets
        uses: ncipollo/release-action@v1
        with:
          draft: true
          allowUpdates: true
          artifacts: "release/*.*"
          token: ${{ secrets.GITHUB_TOKEN }}
